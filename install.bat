@echo off
setlocal enabledelayedexpansion

:: ü¶Ä Script de Instala√ß√£o Autom√°tica - Bloco Praieira (Windows)
:: Este script configura automaticamente o projeto em uma nova m√°quina Windows

echo.
echo ü¶Ä ============================================ ü¶Ä
echo     INSTALA√á√ÉO AUTOM√ÅTICA - BLOCO PRAIEIRA
echo ü¶Ä ============================================ ü¶Ä
echo.

:: Verificar se estamos no diret√≥rio correto
if not exist "package.json" (
    echo [ERRO] Este script deve ser executado no diret√≥rio raiz do projeto
    echo Certifique-se de estar no diret√≥rio 'blocopraieira'
    pause
    exit /b 1
)

echo [INFO] Iniciando instala√ß√£o autom√°tica do projeto Bloco Praieira...
echo.

:: Verificar pr√©-requisitos
echo [INFO] Verificando pr√©-requisitos...

:: Node.js
node --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=*" %%i in ('node --version') do echo [SUCESSO] Node.js %%i ‚úì
) else (
    echo [ERRO] Node.js n√£o encontrado
    echo Por favor, instale Node.js: https://nodejs.org/
    pause
    exit /b 1
)

:: Python
python --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=*" %%i in ('python --version') do echo [SUCESSO] %%i ‚úì
) else (
    echo [ERRO] Python n√£o encontrado
    echo Por favor, instale Python: https://python.org/
    pause
    exit /b 1
)

:: Git
git --version >nul 2>&1
if %errorlevel% equ 0 (
    for /f "tokens=*" %%i in ('git --version') do echo [SUCESSO] %%i ‚úì
) else (
    echo [ERRO] Git n√£o encontrado
    echo Por favor, instale Git: https://git-scm.com/
    pause
    exit /b 1
)

echo [SUCESSO] Todos os pr√©-requisitos atendidos!
echo.

:: Configurar projeto Next.js
echo [INFO] Configurando projeto Next.js...

echo [INFO] Instalando depend√™ncias do Node.js...
call npm install
if %errorlevel% neq 0 (
    echo [ERRO] Falha ao instalar depend√™ncias do Node.js
    pause
    exit /b 1
)

:: Configurar arquivo de ambiente
if not exist ".env.local" (
    echo [INFO] Criando arquivo .env.local...
    copy ".env.example" ".env.local" >nul
    echo [AVISO] Edite .env.local com suas configura√ß√µes espec√≠ficas
) else (
    echo [SUCESSO] Arquivo .env.local j√° existe
)

:: Testar build
echo [INFO] Testando build do projeto...
call npm run build
if %errorlevel% neq 0 (
    echo [AVISO] Build falhou, mas continuando instala√ß√£o...
) else (
    echo [SUCESSO] Build testado com sucesso!
)

echo [SUCESSO] Projeto Next.js configurado!
echo.

:: Configurar automa√ß√£o Python
echo [INFO] Configurando automa√ß√£o Python...

cd automacao-web

:: Criar ambiente virtual
echo [INFO] Criando ambiente virtual Python...
python -m venv venv
if %errorlevel% neq 0 (
    echo [ERRO] Falha ao criar ambiente virtual
    cd ..
    pause
    exit /b 1
)

:: Ativar ambiente virtual e instalar depend√™ncias
echo [INFO] Instalando depend√™ncias Python...
call venv\Scripts\activate.bat

:: Tentar depend√™ncias completas primeiro, fallback para m√≠nimas
pip install -r requirements.txt >nul 2>&1
if %errorlevel% equ 0 (
    echo [SUCESSO] Depend√™ncias completas instaladas
) else (
    echo [AVISO] Falha nas depend√™ncias completas, instalando m√≠nimas...
    pip install -r requirements-minimal.txt
    if %errorlevel% equ 0 (
        echo [SUCESSO] Depend√™ncias m√≠nimas instaladas
    ) else (
        echo [ERRO] Falha ao instalar depend√™ncias Python
        cd ..
        pause
        exit /b 1
    )
)

:: Configurar arquivo de ambiente
if not exist ".env" (
    echo [INFO] Criando arquivo .env para automa√ß√£o...
    (
        echo # URL do site ^(ajustar conforme necess√°rio^)
        echo BASE_URL=http://localhost:3000
        echo.
        echo # Configura√ß√µes do WebDriver
        echo WEBDRIVER_TIMEOUT=10
        echo IMPLICIT_WAIT=5
        echo PAGE_LOAD_TIMEOUT=30
        echo.
        echo # Configura√ß√µes de teste
        echo MAX_WAIT_ELEMENTS=10
        echo SCREENSHOT_ON_FAILURE=true
        echo.
        echo # Configura√ß√µes do navegador
        echo HEADLESS_MODE=false
        echo BROWSER_WIDTH=1920
        echo BROWSER_HEIGHT=1080
        echo.
        echo # Configura√ß√µes de relat√≥rios
        echo EXPORT_EXCEL=true
        echo EXPORT_JSON=true
        echo.
        echo # Configura√ß√µes de logging
        echo LOG_LEVEL=INFO
        echo LOG_TO_FILE=true
    ) > .env
    echo [SUCESSO] Arquivo .env criado
) else (
    echo [SUCESSO] Arquivo .env j√° existe
)

cd ..

echo [SUCESSO] Automa√ß√£o Python configurada!
echo.

:: Perguntar se deve executar testes
set /p run_tests="Deseja executar testes de verifica√ß√£o? (y/N): "
if /i "!run_tests!"=="y" goto run_tests
if /i "!run_tests!"=="yes" goto run_tests
goto skip_tests

:run_tests
echo.
echo [INFO] Executando testes de verifica√ß√£o...

:: Iniciar servidor Next.js em background
echo [INFO] Iniciando servidor Next.js...
start /b cmd /c "npm run dev > nul 2>&1"

:: Aguardar servidor inicializar
echo [INFO] Aguardando servidor inicializar...
timeout /t 10 /nobreak >nul

:: Verificar se servidor est√° rodando
curl -s -f http://localhost:3000 >nul 2>&1
if %errorlevel% equ 0 (
    echo [SUCESSO] Servidor Next.js rodando em http://localhost:3000
) else (
    echo [ERRO] Servidor Next.js n√£o est√° acess√≠vel
    goto skip_tests
)

:: Executar demo da automa√ß√£o
echo [INFO] Executando demo da automa√ß√£o...
cd automacao-web
call venv\Scripts\activate.bat
python demo.py
if %errorlevel% equ 0 (
    echo [SUCESSO] Demo da automa√ß√£o executado com sucesso!
) else (
    echo [AVISO] Demo falhou, mas o ambiente est√° configurado
)
cd ..

:: Parar servidor (tentar matar processos node)
echo [INFO] Parando servidor Next.js...
taskkill /f /im node.exe >nul 2>&1

echo [SUCESSO] Testes conclu√≠dos!
echo.

:skip_tests

:: Gerar relat√≥rio de instala√ß√£o
echo [INFO] Gerando relat√≥rio de instala√ß√£o...

set "timestamp=%date:~6,4%%date:~3,2%%date:~0,2%_%time:~0,2%%time:~3,2%%time:~6,2%"
set "timestamp=!timestamp: =0!"
set "report_file=INSTALACAO_!timestamp!.md"

(
    echo # üìã Relat√≥rio de Instala√ß√£o - Bloco Praieira
    echo.
    echo **Data:** %date% %time%
    echo **Sistema:** Windows
    echo.
    echo ## ‚úÖ Componentes Instalados
    echo.
    echo ### Pr√©-requisitos
    for /f "tokens=*" %%i in ('node --version 2^>nul') do echo - **Node.js:** %%i
    for /f "tokens=*" %%i in ('npm --version 2^>nul') do echo - **NPM:** %%i
    for /f "tokens=*" %%i in ('python --version 2^>nul') do echo - **Python:** %%i
    for /f "tokens=*" %%i in ('git --version 2^>nul') do echo - **Git:** %%i
    echo.
    echo ### Projeto Next.js
    if exist ".env.local" (echo - Arquivo .env.local: ‚úÖ Criado) else (echo - Arquivo .env.local: ‚ùå Faltando)
    if exist ".next" (echo - Build testado: ‚úÖ Sucesso) else (echo - Build testado: ‚ùå Falha)
    echo.
    echo ### Automa√ß√£o Python
    if exist "automacao-web\venv" (echo - Ambiente virtual: ‚úÖ Criado) else (echo - Ambiente virtual: ‚ùå Faltando)
    if exist "automacao-web\.env" (echo - Arquivo .env: ‚úÖ Criado) else (echo - Arquivo .env: ‚ùå Faltando)
    echo.
    echo ## üöÄ Pr√≥ximos Passos
    echo.
    echo 1. **Iniciar desenvolvimento:**
    echo    ```bash
    echo    npm run dev
    echo    ```
    echo.
    echo 2. **Executar automa√ß√£o:**
    echo    ```bash
    echo    cd automacao-web
    echo    venv\Scripts\activate
    echo    python demo.py
    echo    ```
    echo.
    echo 3. **Verificar documenta√ß√£o:**
    echo    - SETUP_COMPLETO.md
    echo    - AUTOMACAO_GUIDE.md
    echo    - CHECKLIST_SETUP.md
    echo.
    echo ---
    echo *Instala√ß√£o autom√°tica conclu√≠da - Bloco Praieira* ü¶Ä
) > "!report_file!"

echo [SUCESSO] Relat√≥rio gerado: !report_file!
echo.

echo [SUCESSO] üéâ Instala√ß√£o conclu√≠da com sucesso!
echo.
echo [INFO] Para iniciar o desenvolvimento:
echo   1. npm run dev                    # Iniciar site
echo   2. cd automacao-web               # Entrar na automa√ß√£o
echo   3. venv\Scripts\activate          # Ativar ambiente Python
echo   4. python demo.py                 # Executar demo
echo.
echo [INFO] Documenta√ß√£o dispon√≠vel:
echo   - SETUP_COMPLETO.md      # Guia completo
echo   - AUTOMACAO_GUIDE.md     # Guia da automa√ß√£o
echo   - CHECKLIST_SETUP.md     # Checklist de verifica√ß√£o
echo.
echo [SUCESSO] Bloco Praieira - Santo Andr√©, ABC Paulista ü¶Ä
echo.

pause